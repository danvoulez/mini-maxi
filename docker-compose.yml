version: '3.8'

services:
  # Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: minicontratos-app
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/minicontratos
      - REDIS_URL=redis://redis:6379
      - AUTH_SECRET=${AUTH_SECRET:-development-secret-change-in-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AI_GATEWAY_API_KEY=${AI_GATEWAY_API_KEY}
      - RAG_PROVIDER=pgIlike
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    command: sh -c "pnpm db:migrate && pnpm dev"

  # PostgreSQL database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: minicontratos-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=minicontratos
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./lib/db/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: minicontratos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: minicontratos-pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@minicontratos.local
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network
    profiles:
      - tools

volumes:
  postgres-data:
  redis-data:
  pgadmin-data:

networks:
  app-network:
    driver: bridge
